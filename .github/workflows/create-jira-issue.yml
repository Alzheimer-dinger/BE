name: Create Jira issue
on:
  issues:
    types: [opened]

permissions:
  contents: write   # 브랜치 푸시 및 PR 생성 권한
  issues: write  # 이슈 수정 권한

jobs:
  create-issue:
    runs-on: ubuntu-latest

    steps:
      # 1) develop 브랜치 체크아웃
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          ref: develop
          persist-credentials: true

      # 2) Jira 로그인
      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL:   ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN:  ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      # 3) Issue Form 파싱
      - name: Issue Parser
        id: issue-parser
        uses: stefanbuck/github-issue-praser@v3
        with:
          template-path: .github/ISSUE_TEMPLATE/jira-issue-template.yml

      # 4) Jira 마크업 변환
      - name: Convert fields to Jira format
        id: md2jira
        uses: peter-evans/jira2md@v1
        with:
          mode: md2jira
          input-text: |
            h3. 💡 구현 내용
            ${{ steps.issue-parser.outputs.issueparser_implementation }}

            h3. 📝 할 일
            ${{ steps.issue-parser.outputs.issueparser_tasks }}

            h3. ✅ 이슈 체크리스트
            ${{ steps.issue-parser.outputs.issueparser_checklist }}

      # 5) Jira 이슈 생성
      - name: Create Jira issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: OPS
          issuetype: Task
          summary:     ${{ github.event.issue.title }}
          description: ${{ steps.md2jira.outputs.output-text }}

      # 6) Jira 이슈에 GitHub 이슈 번호 남기기 (댓글)
      - name: Comment on Jira issue with GitHub issue number
        uses: atlassian/gajira-comment@v3
        with:
          issue:   ${{ steps.create.outputs.issue }}
          comment: 'GitHub Issue: #${{ github.event.issue.number }}'

      # 7) GitHub 이슈 제목에 JIRA 키 추가
      - name: Update GitHub issue title with JIRA key
        uses: actions-cool/issues-helper@v3
        with:
          actions: update-issue
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '[${{ steps.create.outputs.issue }}] ${{ github.event.issue.title }}'

      # 8) Jira에서 백로그 → 할 일 전환
      - name: Move Jira issue to To Do
        uses: atlassian/gajira-transition@v3
        with:
          issue:      ${{ steps.create.outputs.issue }}
          transition: '해야 할 일'

      # 9) Git 브랜치 생성 & 푸시
      - name: Create branch from JIRA key
        run: |
          JIRA_KEY="${{ steps.create.outputs.issue }}"
          BRANCH="feature/${JIRA_KEY}"
          git checkout -b "${BRANCH}"
          git push --set-upstream origin "${BRANCH}"

      # 10) 자동 Pull Request 생성
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Create branch for ${{ steps.create.outputs.issue }}"
          title: "[${{ steps.create.outputs.issue }}] ${{ github.event.issue.title }}"
          body: |
            이 PR은 Jira 이슈 `${{ steps.create.outputs.issue }}` 를 기반으로 자동 생성되었습니다.
          base: develop
          branch: feature/${{ steps.create.outputs.issue }}
