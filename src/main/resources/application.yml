spring:
  datasource:
    username: ${MYSQL_USERNAME}
    url: ${SPRING_DATASOURCE_URL}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST}
      port: ${SPRING_DATA_REDIS_PORT}
      password: ${REDIS_PASSWORD}
    mongodb:
      host: ${SPRING_DATA_MONGODB_HOST}
      port: ${SPRING_DATA_MONGODB_PORT}
      database: ${MONGO_DATABASE}
      username: ${MONGO_INITDB_ROOT_USERNAME}
      password: ${MONGO_INITDB_ROOT_PASSWORD}
      authentication-database: admin

  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false

  batch:
    job:
      enabled: true
    jdbc:
      initialize-schema: always
      table-prefix: BATCH_
      isolation-level-for-create: SERIALIZABLE

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:transcript-consumer-group}
    analysis-group:
      group-id: ${KAFKA_CONSUMER_ANALYSIS_GROUP:analysis-consumer-group}
    cognitive-group:
      group-id: ${KAFKA_CONSUMER_COGNITIVE_GROUP:cognitive-consumer-group}

    topics:
      transcript: ${KAFKA_TOPIC_TRANSCRIPT:transcript}
      emotion-analysis: ${KAFKA_TOPIC_EMOTION_ANALYSIS:emotion-analysis}
      cognitive-report: ${KAFKA_TOPIC_COGNITIVE_REPORT:cognitive-report}


jwt:
  key: fdsafdsafdsafdsafdsafdsafdsafdsafdsafdsafda
  access:
    expiration: 360000
  refresh:
    expiration: 360000

fcm:
  firebase_config_path: ${FCM_CONFIG_FILENAME:firebase-config.json}
  prefix: /app/secret/

springdoc:
  swagger-ui:
    groups-order: DESC # path, query, body, response 순서대로 출력
    tags-sorter: alpha # 태그를 알파벳 순으로 정렬
    operations-sorter: method # delete - get - patch - post - put 순으로 정렬
  paths-to-match:
    - /api/**

gcp:
  storage:
    bucket-name: alzheimerdinger-bucket
    default-profile-url: https://storage.googleapis.com/alzheimerdinger-bucket/image/default-profile.png
  credentials:
    file: file:/app/secret/alzheimerdinger.json
  project-id: alzheimerdinger-b9e53

exclude-auth-path-patterns:
  paths:
    - path-pattern: /api/users/sign-up
      method: POST
    - path-pattern: /api/users/login
      method: POST
    - path-pattern: /swagger-ui.html
      method: GET
    - path-pattern: /swagger-ui/index.html
      method: GET
    - path-pattern: /swagger-ui/**
      method: GET
    - path-pattern: /v3/api-docs
      method: GET
    - path-pattern: /v3/api-docs/swagger-config
      method: GET
    - path-pattern: /webjars
      method: GET
    - path-pattern: /api/batch/transcript/execute
      method: POST
    - path-pattern: /actuator/**
      method: GET
    - path-pattern: /**
      method: OPTIONS

exclude-blacklist-path-patterns:
  paths:
    - path-pattern: /api/users/sign-up
      method: POST
    - path-pattern: /api/users/login
      method: POST
    - path-pattern: /swagger-ui.html
      method: GET
    - path-pattern: /swagger-ui/index.html
      method: GET
    - path-pattern: /swagger-ui/**
      method: GET
    - path-pattern: /v3/api-docs
      method: GET
    - path-pattern: /v3/api-docs/swagger-config
      method: GET
    - path-pattern: /webjars
      method: GET
    - path-pattern: /actuator/**
      method: GET
    - path-pattern: /**
      method: OPTIONS


logging:
  level:
    org.springframework.security: DEBUG
    org.apache.kafka: WARN
    org.springframework.kafka: INFO
    org.springframework.batch.core: DEBUG
    org.springframework.jdbc.core: DEBUG

cors:
  allowed-origins: "http://localhost:5173"
  allowed-methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
  allowed-headers: "Authorization,Content-Type,Accept"
  max-age: 3600

management:
  health:
    mongo:
      enabled: false # 임시 비활성화
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  metrics:
    tags:
      app: alzheimerdinger-core
      env: ${APP_ENV:local}
    distribution:
      percentiles-histogram:
        ad.usecase.duration: true # AOP 타이머에 히스토그램 활성화 (p95/p99)
      percentiles:
        ad.usecase.duration: 0.5,0.9,0.95,0.99
      slo:
        http.server.requests: 50ms,100ms,200ms,500ms,1s,2s
  prometheus:
    metrics:
      export:
        enabled: true
        descriptions: true
        histogram-flavor: prometheus
        step: 30s